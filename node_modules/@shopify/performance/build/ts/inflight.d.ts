import { Event, NavigationMetadata } from './types';
import { Navigation } from './navigation';
interface NavigationStartOptions {
    timeOrigin: number;
    target?: string;
    start?: number;
}
export declare class InflightNavigation {
    private metadata;
    private timeOrigin;
    private start;
    private target;
    private events;
    constructor({ timeOrigin, start, target, }: NavigationStartOptions, metadata: NavigationMetadata);
    event(event: Event, replaceExisting?: boolean | ((newEvent: Event, oldEvent: Event) => boolean)): void;
    cancel(timeStamp?: number): Navigation;
    timeout(timeStamp?: number): Navigation;
    finish(timeStamp?: number): Navigation;
    private end;
    private normalize;
}
export {};
//# sourceMappingURL=inflight.d.ts.map