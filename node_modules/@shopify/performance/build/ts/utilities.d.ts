export declare function referenceTime(): number;
export declare function now(): number;
interface EntryMap {
    resource: PerformanceResourceTiming;
    longtask: PerformanceEntry;
    paint: PerformanceEntry;
    mark: PerformanceMark;
    navigation: PerformanceNavigationTiming;
}
export declare function withEntriesOfType<T extends keyof EntryMap>(type: T, handler: (entry: EntryMap[T]) => void): void;
export declare function withNavigation(handler: (details?: {
    target?: string;
    timeStamp?: number;
}) => void): void;
export declare function withTiming(handler: (timing: typeof performance.timing) => void): void;
export declare const supportsPerformanceObserver: boolean;
export declare function hasGlobal(global: string): boolean;
interface Range {
    start: number;
    duration: number;
}
export declare function getUniqueRanges(ranges: Range[]): Range[];
export {};
//# sourceMappingURL=utilities.d.ts.map