import { Counter } from './counter';
import { Gauge } from './gauge';
import { Registry } from './registry';
import { Histogram } from './histogram';
export declare type CollectorType = 'counter' | 'gauge' | 'histogram';
export declare type RegistryType = Registry;
export declare type GaugeType = Gauge;
export declare type CounterType = Counter;
export declare type HistogramType = Histogram;
export declare type CounterValue = number;
export interface HistogramValueEntries {
    [key: string]: number;
}
export interface HistogramValue {
    entries: HistogramValueEntries;
    sum: number;
    count: number;
    raw: number[];
}
export declare type MetricValue = CounterValue | HistogramValue;
export interface Metric<T extends MetricValue> {
    value: T;
    labels?: Labels;
}
export interface Labels {
    [key: string]: string | number;
}
