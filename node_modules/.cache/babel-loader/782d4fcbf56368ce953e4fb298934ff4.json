{"ast":null,"code":"import isViablePhoneNumber from './helpers/isViablePhoneNumber';\nimport parseNumber from './parse_';\nimport _isValidNumberForRegion from './isValidNumberForRegion_';\nexport default function isValidNumberForRegion(number, country, metadata) {\n  if (typeof number !== 'string') {\n    throw new TypeError('number must be a string');\n  }\n\n  if (typeof country !== 'string') {\n    throw new TypeError('country must be a string');\n  } // `parse` extracts phone numbers from raw text,\n  // therefore it will cut off all \"garbage\" characters,\n  // while this `validate` function needs to verify\n  // that the phone number contains no \"garbage\"\n  // therefore the explicit `isViablePhoneNumber` check.\n\n\n  var input;\n\n  if (isViablePhoneNumber(number)) {\n    input = parseNumber(number, {\n      defaultCountry: country\n    }, metadata);\n  } else {\n    input = {};\n  }\n\n  return _isValidNumberForRegion(input, country, undefined, metadata);\n}","map":{"version":3,"mappings":"AAAA,OAAOA,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAEA,eAAe,SAASC,sBAAT,CAAgCC,MAAhC,EAAwCC,OAAxC,EAAiDC,QAAjD,EAA2D;AACzE,MAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC/B,UAAM,IAAIG,SAAJ,CAAc,yBAAd,CAAN;AACA;;AACD,MAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAChC,UAAM,IAAIE,SAAJ,CAAc,0BAAd,CAAN;AALwE,IAOzE;AACA;AACA;AACA;AACA;;;AACA,MAAIC,KAAJ;;AACA,MAAIR,mBAAmB,CAACI,MAAD,CAAvB,EAAiC;AAChCI,SAAK,GAAGP,WAAW,CAACG,MAAD,EAAS;AAAEK,oBAAc,EAAEJ;AAAlB,KAAT,EAAsCC,QAAtC,CAAnBE;AADD,SAEO;AACNA,SAAK,GAAG,EAARA;AACA;;AACD,SAAON,uBAAuB,CAACM,KAAD,EAAQH,OAAR,EAAiBK,SAAjB,EAA4BJ,QAA5B,CAA9B;AACA","names":["isViablePhoneNumber","parseNumber","_isValidNumberForRegion","isValidNumberForRegion","number","country","metadata","TypeError","input","defaultCountry","undefined"],"sources":["D:\\3.0 SRINIVAS-WORKS\\TEMP\\user-ui\\node_modules\\libphonenumber-js\\source\\isValidNumberForRegion.js"],"sourcesContent":["import isViablePhoneNumber from './helpers/isViablePhoneNumber'\r\nimport parseNumber from './parse_'\r\nimport _isValidNumberForRegion from './isValidNumberForRegion_'\r\n\r\nexport default function isValidNumberForRegion(number, country, metadata) {\r\n\tif (typeof number !== 'string') {\r\n\t\tthrow new TypeError('number must be a string')\r\n\t}\r\n\tif (typeof country !== 'string') {\r\n\t\tthrow new TypeError('country must be a string')\r\n\t}\r\n\t// `parse` extracts phone numbers from raw text,\r\n\t// therefore it will cut off all \"garbage\" characters,\r\n\t// while this `validate` function needs to verify\r\n\t// that the phone number contains no \"garbage\"\r\n\t// therefore the explicit `isViablePhoneNumber` check.\r\n\tlet input\r\n\tif (isViablePhoneNumber(number)) {\r\n\t\tinput = parseNumber(number, { defaultCountry: country }, metadata)\r\n\t} else {\r\n\t\tinput = {}\r\n\t}\r\n\treturn _isValidNumberForRegion(input, country, undefined, metadata)\r\n}"]},"metadata":{},"sourceType":"module"}