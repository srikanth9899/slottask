{"ast":null,"code":"import { EventType } from './types.mjs';\nimport { getUniqueRanges } from './utilities.mjs';\nconst LIFECYCLE_EVENTS = [EventType.TimeToFirstByte, EventType.TimeToFirstPaint, EventType.TimeToFirstContentfulPaint, EventType.DomContentLoaded, EventType.FirstInputDelay, EventType.Load];\n\nclass Navigation {\n  get isFullPageNavigation() {\n    return this.metadata.index === 0;\n  }\n\n  constructor(_ref, metadata) {\n    let {\n      start,\n      duration,\n      target,\n      events,\n      result\n    } = _ref;\n    this.metadata = metadata;\n    this.start = void 0;\n    this.duration = void 0;\n    this.target = void 0;\n    this.events = void 0;\n    this.result = void 0;\n    this.start = start;\n    this.duration = duration;\n    this.target = target;\n    this.events = events;\n    this.result = result;\n  }\n\n  eventsByType(targetType) {\n    return this.events.filter(_ref2 => {\n      let {\n        type\n      } = _ref2;\n      return type === targetType;\n    });\n  }\n\n  totalDurationByEventType(type) {\n    let {\n      countOverlaps = false\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const events = this.eventsByType(type);\n    const {\n      start: navigationStart\n    } = this;\n\n    if (events.length === 0) {\n      return 0;\n    }\n\n    const ranges = countOverlaps ? events : getUniqueRanges(events);\n    return ranges.reduce((total, _ref3) => {\n      let {\n        start,\n        duration\n      } = _ref3;\n      return total + duration - Math.max(0, navigationStart - start);\n    }, 0);\n  }\n\n  get timeToComplete() {\n    return this.duration;\n  }\n\n  get timeToUsable() {\n    const usableEvent = this.eventsByType(EventType.Usable)[0];\n    return usableEvent ? usableEvent.start - this.start : this.timeToComplete;\n  }\n\n  get resourceEvents() {\n    return [...this.eventsByType(EventType.ScriptDownload), ...this.eventsByType(EventType.StyleDownload)];\n  }\n\n  get totalDownloadSize() {\n    const events = this.resourceEvents;\n\n    if (events.length === 0) {\n      return undefined;\n    }\n\n    return events.reduce((total, _ref4) => {\n      let {\n        metadata: {\n          size\n        }\n      } = _ref4;\n      return size == null || typeof total !== 'number' ? undefined : total + size;\n    }, 0);\n  }\n\n  get cacheEffectiveness() {\n    const events = this.resourceEvents;\n\n    if (events.length === 0 || events.some(_ref5 => {\n      let {\n        metadata: {\n          size\n        }\n      } = _ref5;\n      return size == null;\n    })) {\n      return undefined;\n    }\n\n    return events.filter(_ref6 => {\n      let {\n        duration\n      } = _ref6;\n      return duration === 0;\n    }).length / events.length;\n  }\n\n  toJSON() {\n    let {\n      removeEventMetadata = true,\n      removeLifecycleEvents = true\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const events = removeLifecycleEvents ? this.events.filter(_ref7 => {\n      let {\n        type\n      } = _ref7;\n      return !LIFECYCLE_EVENTS.includes(type);\n    }) : this.events;\n    const processedEvents = removeEventMetadata ? events.map(_ref8 => {\n      let {\n        metadata,\n        ...rest\n      } = _ref8;\n      return rest;\n    }) : events;\n    return {\n      start: this.start,\n      duration: this.duration,\n      target: this.target,\n      events: processedEvents,\n      result: this.result\n    };\n  }\n\n}\n\nexport { Navigation };","map":{"version":3,"sources":["D:/3.0 SRINIVAS-WORKS/TEMP/user-ui/node_modules/@shopify/performance/build/esm/navigation.mjs"],"names":["EventType","getUniqueRanges","LIFECYCLE_EVENTS","TimeToFirstByte","TimeToFirstPaint","TimeToFirstContentfulPaint","DomContentLoaded","FirstInputDelay","Load","Navigation","isFullPageNavigation","metadata","index","constructor","start","duration","target","events","result","eventsByType","targetType","filter","type","totalDurationByEventType","countOverlaps","navigationStart","length","ranges","reduce","total","Math","max","timeToComplete","timeToUsable","usableEvent","Usable","resourceEvents","ScriptDownload","StyleDownload","totalDownloadSize","undefined","size","cacheEffectiveness","some","toJSON","removeEventMetadata","removeLifecycleEvents","includes","processedEvents","map","rest"],"mappings":"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","sourcesContent":["import { EventType } from './types.mjs';\nimport { getUniqueRanges } from './utilities.mjs';\n\nconst LIFECYCLE_EVENTS = [EventType.TimeToFirstByte, EventType.TimeToFirstPaint, EventType.TimeToFirstContentfulPaint, EventType.DomContentLoaded, EventType.FirstInputDelay, EventType.Load];\nclass Navigation {\n  get isFullPageNavigation() {\n    return this.metadata.index === 0;\n  }\n\n  constructor({\n    start,\n    duration,\n    target,\n    events,\n    result\n  }, metadata) {\n    this.metadata = metadata;\n    this.start = void 0;\n    this.duration = void 0;\n    this.target = void 0;\n    this.events = void 0;\n    this.result = void 0;\n    this.start = start;\n    this.duration = duration;\n    this.target = target;\n    this.events = events;\n    this.result = result;\n  }\n\n  eventsByType(targetType) {\n    return this.events.filter(({\n      type\n    }) => type === targetType);\n  }\n\n  totalDurationByEventType(type, {\n    countOverlaps = false\n  } = {}) {\n    const events = this.eventsByType(type);\n    const {\n      start: navigationStart\n    } = this;\n\n    if (events.length === 0) {\n      return 0;\n    }\n\n    const ranges = countOverlaps ? events : getUniqueRanges(events);\n    return ranges.reduce((total, {\n      start,\n      duration\n    }) => total + duration - Math.max(0, navigationStart - start), 0);\n  }\n\n  get timeToComplete() {\n    return this.duration;\n  }\n\n  get timeToUsable() {\n    const usableEvent = this.eventsByType(EventType.Usable)[0];\n    return usableEvent ? usableEvent.start - this.start : this.timeToComplete;\n  }\n\n  get resourceEvents() {\n    return [...this.eventsByType(EventType.ScriptDownload), ...this.eventsByType(EventType.StyleDownload)];\n  }\n\n  get totalDownloadSize() {\n    const events = this.resourceEvents;\n\n    if (events.length === 0) {\n      return undefined;\n    }\n\n    return events.reduce((total, {\n      metadata: {\n        size\n      }\n    }) => size == null || typeof total !== 'number' ? undefined : total + size, 0);\n  }\n\n  get cacheEffectiveness() {\n    const events = this.resourceEvents;\n\n    if (events.length === 0 || events.some(({\n      metadata: {\n        size\n      }\n    }) => size == null)) {\n      return undefined;\n    }\n\n    return events.filter(({\n      duration\n    }) => duration === 0).length / events.length;\n  }\n\n  toJSON({\n    removeEventMetadata = true,\n    removeLifecycleEvents = true\n  } = {}) {\n    const events = removeLifecycleEvents ? this.events.filter(({\n      type\n    }) => !LIFECYCLE_EVENTS.includes(type)) : this.events;\n    const processedEvents = removeEventMetadata ? events.map(({\n      metadata,\n      ...rest\n    }) => rest) : events;\n    return {\n      start: this.start,\n      duration: this.duration,\n      target: this.target,\n      events: processedEvents,\n      result: this.result\n    };\n  }\n\n}\n\nexport { Navigation };\n"]},"metadata":{},"sourceType":"module"}