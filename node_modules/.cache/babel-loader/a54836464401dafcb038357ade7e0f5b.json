{"ast":null,"code":"var _jsxFileName = \"D:\\\\3.0 SRINIVAS-WORKS\\\\TEMP\\\\user-ui\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { MetricsProvider } from \"@cabify/prom-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst normalizePath = path => {\n  console.log(path, 'PATH----');\n  const match = path.match(/\\/\\/(\\d+)/);\n\n  if (match) {\n    return `/`;\n  }\n\n  return path;\n}; // please remember to define them outside the component to avoid unneeded re-renders\n\n\nconst customMetrics = [{\n  type: 'counter',\n  name: 'bookings_event',\n  description: 'Number of times booking was triggred'\n}, {\n  type: 'counter',\n  name: 'admin_visits',\n  description: 'Number of visits to website'\n}];\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(MetricsProvider, {\n  appName: \"User UI\",\n  owner: \"app\",\n  getNormalizedPath: normalizePath,\n  metricsAggregatorUrl: \"https://webhook.site/f0d2b229-95f2-4f6f-bb77-7936306e6bc1\" // To be replaced with prometheus gateway URL. This URL is only for local testing \n  ,\n  customMetrics: customMetrics,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"sources":["D:/3.0 SRINIVAS-WORKS/TEMP/user-ui/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","MetricsProvider","normalizePath","path","console","log","match","customMetrics","type","name","description","root","createRoot","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,UAAlB;AACA,QAAMG,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAW,WAAX,CAAd;;AACA,MAAIA,KAAJ,EAAW;AACT,WAAQ,GAAR;AACD;;AACD,SAAOH,IAAP;AACD,CAPD,C,CASA;;;AACA,MAAMI,aAAa,GAAG,CAClB;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,WAAW,EAAE;AAHf,CADkB,EAMlB;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,WAAW,EAAE;AAHf,CANkB,CAAtB;AAaA,MAAMC,IAAI,GAAGb,QAAQ,CAACc,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,eAAD;AACE,EAAA,OAAO,EAAC,SADV;AAEE,EAAA,KAAK,EAAC,KAFR;AAGE,EAAA,iBAAiB,EAAEb,aAHrB;AAIE,EAAA,oBAAoB,EAAC,2DAJvB,CAIoF;AAJpF;AAKE,EAAA,aAAa,EAAEK,aALjB;AAAA,yBAOE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,QADF;AAYAP,eAAe","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { MetricsProvider } from \"@cabify/prom-react\";\r\n\r\nconst normalizePath = (path) => {\r\n  console.log(path, 'PATH----')\r\n  const match = path.match(/\\/\\/(\\d+)/);\r\n  if (match) {\r\n    return `/`;\r\n  }\r\n  return path;\r\n};\r\n\r\n// please remember to define them outside the component to avoid unneeded re-renders\r\nconst customMetrics = [\r\n    {\r\n      type: 'counter',\r\n      name: 'bookings_event',\r\n      description: 'Number of times booking was triggred',\r\n    },\r\n    {\r\n      type: 'counter',\r\n      name: 'admin_visits',\r\n      description: 'Number of visits to website',\r\n    },\r\n];\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <MetricsProvider\r\n    appName=\"User UI\"\r\n    owner=\"app\"\r\n    getNormalizedPath={normalizePath}\r\n    metricsAggregatorUrl=\"https://webhook.site/f0d2b229-95f2-4f6f-bb77-7936306e6bc1\"  // To be replaced with prometheus gateway URL. This URL is only for local testing \r\n    customMetrics={customMetrics}\r\n  >\r\n    <App />\r\n  </MetricsProvider>\r\n);\r\n\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}